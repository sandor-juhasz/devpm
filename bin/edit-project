#!/bin/bash
###############################################################################
# Edit a recently edited project in the default editor.
# The recently edited projects are stored in ~/.local/var/cache/edit-project.cache
###############################################################################

cache_dir=~/.local/var/cache
cache_file="${cache_dir}/edit-project.cache"

add_dir_to_cache() {
    local dirname=$1
    mkdir -p "${cache_dir}"
    echo "${dirname}" >>"${cache_file}"
    sort "${cache_file}" | uniq >"${cache_file}.new" 
    mv "${cache_file}.new" "${cache_file}"
}

open_with_editor() {
    local project_path=$1

    if [[ ! -d "${project_path}" ]]; then
        echo "Not a directory: ${dir_to_open}"
        exit 1
    fi

    local devcontainer_config="${project_path}/.devcontainer/devcontainer.json"
    echo "Looking for $devcontainer_config..."
    if [[ -e  "$devcontainer_config" ]]; then
        echo "DevContainer project found. Opening it with VSCode..."

        local mypath="$(wslpath -w $project_path)"
        local p=$(printf "%s" "$mypath" | hexdump -v -e "/1 \"%02x\"")
        echo $p
        local folder_uri="vscode-remote://dev-container+${p}/workspaces/$(basename $project_path)"

        echo "Opening folder URI:  ${folder_uri}"
        code --folder-uri "${folder_uri}"
    else
        echo "DevContainer config not found."
        $EDITOR "${project_path}"
    fi
}

if [ ! -d "${cache_dir}" ]; then
    mkdir -p "${cache_dir}"
fi
if [ ! -f "${cache_file}" ]; then
    touch "${cache_file}"
fi

# Process the cache file, remove any directory that does not exist
tmpfile=$(mktemp)
cp "$cache_file" "$tmpfile"
awk -F '\n' '{ if (system("test -d \"" $1 "\"")==0) { print $1 } }' "$tmpfile" >"$cache_file"
rm "$tmpfile"

if [ $# -eq 0 ]; then
    project=$(fzf --tac --border=rounded --border-label="Select a project to edit" <"${cache_file}")
    if [ $? -ne 0 ]; then
        exit 1
    fi
    open_with_editor "${project}"
else
    dir_to_open=$1
    if [ ! -d "${dir_to_open}" ]; then
        echo "Not a directory: ${dir_to_open}"
        exit 1
    else
        full_path=$(readlink -f "$dir_to_open")
        add_dir_to_cache "${full_path}"
        open_with_editor "${full_path}"
    fi
fi
