#!/bin/bash
###############################################################################
# Edit a recently edited project in the default editor.
# The recently edited projects are stored in ~/.local/var/cache/edit-project.cache
###############################################################################

cache_dir=~/.local/var/cache
cache_file="${cache_dir}/edit-project.cache"

add_dir_to_cache() {
    local dirname=$1
    mkdir -p "${cache_dir}"
    echo "${dirname}" >>"${cache_file}"
    sort "${cache_file}" | uniq >"${cache_file}.new" 
    mv "${cache_file}.new" "${cache_file}"
}

is_git_directory() {
    pushd $1 >/dev/null || exit 1
    if git rev-parse --is-inside-work-tree >/dev/null; then
        popd >/dev/null || exit 1
        return 0
    else
        popd >/dev/null || exit 1
        return 1
    fi
}

get_git_root() {
    pushd $1 >/dev/null || exit 1
    git rev-parse --show-toplevel
    popd >/dev/null || exit 1
}

#
# Parameters:
#   $1: The full path of the project directory to open.
# 
open_with_editor() {
    local project_path=$1

    if [[ ! -d "${project_path}" ]]; then
        echo "Not a directory: ${dir_to_open}"
        exit 1
    fi

    local devcontainer_config="${project_path}/.devcontainer/devcontainer.json"
    echo "Looking for $devcontainer_config..."
    if [[ -e  "$devcontainer_config" ]]; then
        echo "DevContainer project found. Opening it with VSCode..."

        local mypath="$(wslpath -w $project_path)"
        local p=$(printf "%s" "$mypath" | hexdump -v -e "/1 \"%02x\"")
        local path_suffix
        if is_git_directory "$project_path"; then
            #echo "Git directory."
            local git_root=$(get_git_root "$project_path")
            
            
            local git_root_parent="$(dirname "$git_root")"
            local git_root_parent_length="${#git_root_parent}"
            local path_suffix="${project_path:${git_root_parent_length}}"
        else
            path_suffix="/$(basename $project_path)"
        fi
        #echo "Path suffix: $path_suffix"

        local folder_uri="vscode-remote://dev-container+${p}/workspaces${path_suffix}"
        #echo "Folder uri: $folder_uri"
        code --folder-uri "${folder_uri}"
    else
        echo "DevContainer config not found."
        $EDITOR "${project_path}"
    fi
}

if [ $# -eq 0 ]; then
    project=$(select-project "Select a project to edit")
    if [ $? -ne 0 ]; then
        exit 1
    fi
    open_with_editor "${project}"
else
    dir_to_open=$1
    if [ ! -d "${dir_to_open}" ]; then
        echo "Not a directory: ${dir_to_open}"
        exit 1
    else
        full_path=$(readlink -f "$dir_to_open")
        add_dir_to_cache "${full_path}"
        open_with_editor "${full_path}"
    fi
fi
